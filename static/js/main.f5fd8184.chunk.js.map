{"version":3,"sources":["constants/user.constants.js","constants/demo.database.js","components/tiles/friend.tile.js","components/tiles/all.friends.js","components/conversation/chat.line.js","actions/user.actions.js","components/conversation/text.box.js","components/conversation/conversation.js","components/dashboard/dashboard.js","App.js","serviceWorker.js","reducers/user.reducer.js","reducers/index.js","store/index.js","index.js"],"names":["user_constants","SEND_MESSAGE","OPEN_CHAT","all_users","name","id","email","friends","FriendTile","friend","this","props","friend_name","friend_id","className","user_reducer","onClick","tileClick","Component","connect","state","AllFriendTiles","all_friends","map","f","i","key","ChatLine","message","base_user_id","user_actions","sendMessage","sender_id","receiver_id","type","payload","openChat","TextBox","value","base_user","receiver","text","boxRef","style","onChange","event","setState","target","messageText","trim","onClickHandler","dispatch","Conversation","friend_selected","chat_history","prev_chat","messages","c","Dashboard","app_config","friendTileOnclick","onFriendTileClick","href","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","action","duplicate_chat_history","temp_messages_arr","slice","push","start_convo","temp_state","localStorage","setItem","JSON","stringify","parse","getItem","init_state","rootReducer","combineReducers","loggerMiddleware","createLogger","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"oTAAaA,EAAiB,CAC1BC,aAAe,uBACfC,UAAY,6BCFLC,EAAY,CACnB,KAAS,CAACC,KAAM,OAAQC,GAAI,OAAQC,MAAO,iBAAkBC,QAAU,CAAC,OAAQ,OAAQ,QAAS,YACjG,KAAS,CAACH,KAAM,OAAQC,GAAG,OAAQC,MAAO,iBAAkBC,QAAU,CAAC,OAAQ,OAAQ,YACvF,KAAS,CAACH,KAAM,OAAQC,GAAG,OAAQC,MAAO,iBAAkBC,QAAU,CAAC,OAAQ,QAAS,YACxF,QAAY,CAACH,KAAM,UAAWC,GAAI,UAAWC,MAAO,qBACpD,MAAU,CAACF,KAAM,QAASC,GAAK,QAASC,MAAO,oB,OCD7CE,E,iLACQ,IAAD,OACCC,EAASN,EAAUO,KAAKC,MAAMN,IAChCO,EAAcH,EAAOL,KACrBS,EAAYJ,EAAOJ,GACvB,OAAO,wBAAIS,UAAWD,GAAaH,KAAKC,MAAMI,aAAaF,UAAY,6BAA+B,sBAAuBG,QAAS,kBAAM,EAAKL,MAAMM,UAAUJ,KAAaD,O,GAL7JM,aAaVC,eAJS,SAAAC,GACpB,OAAOA,IAGID,CAAyBX,GCCzBa,E,iLAZP,IAAMC,EAAcnB,EAAS,KAASI,QAChCU,EAAYP,KAAKC,MAAMM,UAC7B,OAAO,wBAAIH,UAAU,cAEbQ,EAAYC,KAAI,SAACC,EAAGC,GAChB,OAAO,kBAAC,EAAD,CAAYC,IAAKD,EAAGpB,GAAImB,EAAGP,UAAWA,Y,GAPpCC,aCQdS,E,iLAPP,IAAMC,EAAUlB,KAAKC,MAAMiB,QACrBf,EAAYH,KAAKC,MAAME,UACRH,KAAKC,MAAMkB,aAChC,OAAO,yBAAKf,UAAWc,EAAQvB,IAAMQ,EAAY,aAAe,cAAe,yBAAKC,UAAWc,EAAQvB,IAAMQ,EAAY,YAAc,cAAc,0BAAMC,UAAWc,EAAQvB,IAAMQ,EAAY,yBAA2B,4BAA6Be,EAAQA,e,GALjPV,aCDVY,EAAe,CACxBC,YAIJ,SAAqBC,EAAWC,EAAaL,GACzC,MAAO,CACHM,KAAOlC,EAAeC,aACtBkC,QAAU,CAACH,YAAWC,cAAaL,aANvCQ,SAUJ,SAAkBvB,GACd,MAAO,CACHqB,KAAOlC,EAAeE,UACtBiC,QAAU,CAAEtB,UAAYA,M,ICb1BwB,E,YAEF,WAAY1B,GAAQ,IAAD,8BACf,4CAAMA,KACDS,MAAQ,CACXkB,MAAO,IAHM,E,sEAQf,IAAMP,EAAcrB,KAAKC,MAAMoB,YACzBQ,EAAY7B,KAAKC,MAAMkB,aACvBW,EAAW9B,KAAKC,MAAMsB,YACtBQ,EAAO/B,KAAKU,MAAMkB,MAClBI,EAAShC,KAYf,OAAO,yBAAKI,UAAU,kBAAkB6B,MAAO,CAAC,OAAW,SACnD,8BAAUL,MAAO5B,KAAKU,MAAMkB,MAAOM,SAX3C,SAAsBC,GAClBH,EAAOI,SAAS,CAACR,MAAOO,EAAME,OAAOT,SAU0BxB,UAAU,iBACrE,4BAAQA,UAAU,4BAA4BE,QAAS,kBAR/D,WACI,IAAIgC,EAAeP,EAAKQ,OACpBD,IACJjB,EAAYQ,EAAWC,EAAUQ,GACjCN,EAAOI,SAAS,CAACR,MAAO,MAIyCY,KAA7D,a,GA5BMhC,aA8CPC,eAZS,SAAAC,GACpB,MAAO,CAAE,aAAiBA,EAAML,aAAawB,UAAW,YAAgBnB,EAAML,aAAaF,cAGpE,SAAAsC,GACvB,MAAO,CACHpB,YAAY,SAACC,EAAWC,EAAaL,GACjCuB,EAASrB,EAAaC,YAAYC,EAAWC,EAAaL,QAKvDT,CAA6CkB,GC3CtDe,E,iLAGE,IAAMC,EAAkB3C,KAAKC,MAAME,UAC7B0B,EAAY7B,KAAKC,MAAM4B,UACvBe,EAAe5C,KAAKC,MAAM2C,aAEhC,IAAID,EACA,OAAO,6BAAK,0CAEhB,IAAIC,IAAiBA,EAAaD,GAC9B,OAAO,6BAAK,yCAAL,6BACwBlD,EAAUkD,GAAiBjD,KACtD,kBAAC,EAAD,OAGR,IAAMmD,EAAYD,EAAaD,GAAiBG,SAChD,OAAO,yBAAKb,MAAO,CAAC,OAAW,SAAU7B,UAAU,cACnD,yBAAK6B,MAAO,CAAC,OAAW,QAAS,UAAc,SAAU,SAAY,aAAc,QAAY,SAAU7B,UAAU,OAAOyC,EAAUhC,KAAI,SAACkC,EAAGhC,GAAJ,OAAU,kBAAC,EAAD,CAAUC,IAAKD,EAAGG,QAAS6B,EAAG5B,aAAcU,EAAW1B,UAAWwC,QACpN,kBAAC,EAAD,W,GAnBmBnC,aA4BZC,eAJS,SAAAC,GACpB,OAAOA,EAAML,eAGFI,CAAyBiC,GC5BlCM,E,iLAGE,IAAMC,EAAajD,KAAKC,MAAMI,aACxBwB,EAAYoB,EAAWpB,UAEvBqB,GADkBD,EAAW9C,UACTH,KAAKC,MAAMkD,mBAChBnD,KAAKC,MAAM2C,aACZ5C,KAAKC,MAAMoB,YAE/B,OAAO,yBAAKjB,UAAU,aAClB,yBAAKA,UAAU,gCACX,uBAAGA,UAAU,eAAegD,KAAK,KAAjC,WAGA,wBAAIhD,UAAU,sBACV,wBAAIA,UAAU,YACV,uBAAGA,UAAU,WAAWgD,KAAK,IAAI3D,EAAUoC,GAAWnC,SAIlE,yBAAKU,UAAU,kBACX,yBAAKA,UAAU,SAAQ,kBAAC,EAAD,CAAYG,UAAW2C,KAC9C,yBAAK9C,UAAU,SAAQ,kBAAC,EAAD,a,GAvBfI,aA6CTC,eAfS,SAAAC,GACpB,OAAOA,KAGgB,SAAA+B,GACvB,MAAO,CACHU,kBAAkB,SAAChD,GACfsC,EAASrB,EAAaM,SAASvB,KAEnCkB,YAAY,SAACC,EAAWC,EAAaL,GACjCuB,EAASrB,EAAaC,YAAYC,EAAWC,EAAaL,QAKvDT,CAA6CuC,GCzC7CK,MANf,WACE,OACE,kBAAC,EAAD,OCKEC,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB3D,QACfqD,UAAUC,cAAcQ,YAI1BC,QAAQC,IACN,iHAKEZ,GAAUA,EAAOa,UACnBb,EAAOa,SAASR,KAMlBM,QAAQC,IAAI,sCAGRZ,GAAUA,EAAOc,WACnBd,EAAOc,UAAUT,WAO5BU,OAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,M,4lBC9FjE,IAiCezE,EAjCM,WAA4B,IAA3BK,EAA0B,uDAAlB,KAAMqE,EAAY,uCAC5C,OAAOA,EAAOvD,MACV,KAAKlC,EAAeE,UAChB,OAAO,EAAP,GAAWkB,EAAX,CAAkBP,UAAY4E,EAAOtD,QAAQtB,YACjD,KAAKb,EAAeC,aACZ,IAAMgC,EAAcwD,EAAOtD,QAAQF,YAC7BD,EAAYyD,EAAOtD,QAAQH,UAC3BgB,EAAcyC,EAAOtD,QAAQP,QAC7B8D,EAAsB,KAAOtE,EAAMkC,cACzC,IAAIrB,IAAgBD,EAChB,OAAOZ,EAEX,IAAIQ,EAAU,CAACvB,GAAK2B,EAAWJ,QAAUoB,GACrC2C,EAAoB,GACxB,GAAIvE,EAAMkC,aAAarB,IAKnB0D,EAAoBvE,EAAMkC,aAAarB,GAAauB,SAASoC,MAAM,IACjDC,KAAKjE,GACvB8D,EAAuBzD,GAAauB,SAAWmC,MAPd,CACjC,IAAIG,EAAc,CAACzF,GAAK4B,GACxB6D,EAAYtC,SAAW,CAAC5B,GACxB8D,EAAuBzD,GAAe6D,EAM1C,IAAIC,EAAU,KAAO3E,EAAP,CAAckC,aAAeoC,IAE/C,OADIM,aAAaC,QAAQjE,EAAWkE,KAAKC,UAAUJ,IAC5CA,EACX,QACI,GAAGG,KAAKE,MAAMJ,aAAaK,QAAQ,SAAU,OAAOH,KAAKE,MAAMJ,aAAaK,QAAQ,SACpF,IAAIC,EAAa,CAAC/D,UAAY,OAAQe,aAAe,IACrD,OAAOgD,ICxBJC,EAJKC,YAAgB,CAChCzF,iBCCE0F,EAAmBC,yBAUVC,EARMC,YACjBL,EACAM,YACIC,IACAL,ICFRM,IAASC,OAAQ,kBAAC,IAAD,CAAUL,MAAOA,GAAjB,IAAyB,kBAAC,EAAD,OAAoBM,SAASC,eAAe,SJa/E,SAAkB1C,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAI0C,IAAIC,oBAAwBlD,OAAOC,SAASL,MACpDuD,SAAWnD,OAAOC,SAASkD,OAIvC,OAGFnD,OAAOoD,iBAAiB,QAAQ,WAC9B,IAAM/C,EAAK,UAAM6C,oBAAN,sBAEPpD,IAgEV,SAAiCO,EAAOC,GAEtC+C,MAAMhD,GACHK,MAAK,SAAA4C,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cAG5CpD,UAAUC,cAAcoD,MAAMlD,MAAK,SAAAC,GACjCA,EAAakD,aAAanD,MAAK,WAC7BV,OAAOC,SAAS6D,eAKpB1D,EAAgBC,EAAOC,MAG1Be,OAAM,WACLJ,QAAQC,IACN,oEArFA6C,CAAwB1D,EAAOC,GAI/BC,UAAUC,cAAcoD,MAAMlD,MAAK,WACjCO,QAAQC,IACN,iHAMJd,EAAgBC,EAAOC,OInC/BE,K","file":"static/js/main.f5fd8184.chunk.js","sourcesContent":["export const user_constants = {\r\n    SEND_MESSAGE : 'SEND_MESSAGE_REQUEST',\r\n    OPEN_CHAT : 'OPEN_CHAT_MESSAGE_REQUEST'\r\n}","export var all_users = {\r\n    \"dave\" : {name :\"Dave\", id: \"dave\", email: \"dave@react.com\", friends : [\"john\", \"mark\", \"katie\", \"jessica\"]},\r\n    \"john\" : {name :\"John\", id:\"john\", email: \"john@react.com\", friends : [\"mark\", \"dave\", \"jessica\"]},\r\n    \"mark\" : {name :\"Mark\", id:\"mark\", email: \"mark@react.com\", friends : [\"john\", \"katie\", \"jessica\"]},\r\n    \"jessica\" : {name :\"Jessica\", id: \"jessica\", email: \"jessica@react.com\"},\r\n    \"katie\" : {name :\"Katie\", id : \"katie\", email: \"katie@react.com\"}\r\n};\r\n\r\n\r\nexport var chat_history = {\r\n    \"dave\" : [\r\n        {\r\n            id : \"john\",\r\n            messages : [\r\n                {\r\n                    id : \"dave\",\r\n                    message : \"Hello John\"\r\n                },\r\n                {\r\n                    id : \"john\",\r\n                    message : \"Hello Dave\"\r\n                },{\r\n                    id : \"dave\",\r\n                    message : \"Hello John\"\r\n                },\r\n                {\r\n                    id : \"john\",\r\n                    message : \"Hello Dave\"\r\n                },{\r\n                    id : \"dave\",\r\n                    message : \"Hello John\"\r\n                },\r\n                {\r\n                    id : \"john\",\r\n                    message : \"Hello Dave\"\r\n                },{\r\n                    id : \"dave\",\r\n                    message : \"Hello John\"\r\n                },\r\n                {\r\n                    id : \"john\",\r\n                    message : \"Hello Dave\"\r\n                },{\r\n                    id : \"dave\",\r\n                    message : \"Hello John\"\r\n                },\r\n                {\r\n                    id : \"john\",\r\n                    message : \"Hello Dave\"\r\n                },{\r\n                    id : \"dave\",\r\n                    message : \"Hello John\"\r\n                },\r\n                {\r\n                    id : \"john\",\r\n                    message : \"Hello Dave\"\r\n                },{\r\n                    id : \"dave\",\r\n                    message : \"Hello Johergergeveb ergergegerh betththn\"\r\n                },\r\n                {\r\n                    id : \"john\",\r\n                    message : \"Hello Dave 12 efwfwvwg3rgrgr3g\"\r\n                }\r\n\r\n            ]\r\n        },\r\n        {\r\n            id : \"jessica\",\r\n            messages : [\r\n                {\r\n                    id : \"dave\",\r\n                    message : \"Hello Jessica\"\r\n                },\r\n                {\r\n                    id : \"jessica\",\r\n                    message : \"Hello Dave\"\r\n                }\r\n                ,\r\n                {\r\n                    id : \"jessica\",\r\n                    message : \"How are you doing ? \"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"mark\" : [\r\n        {\r\n            id : \"katie\",\r\n            messages : [\r\n                {\r\n                    id : \"dave\",\r\n                    message : \"Hello Mark\"\r\n                },\r\n                {\r\n                    id : \"mark\",\r\n                    message : \"Hello Katie\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            id : \"jessica\",\r\n            messages : [\r\n                {\r\n                    id : \"mark\",\r\n                    message : \"Hello Jessica\"\r\n                },\r\n                {\r\n                    id : \"jessica\",\r\n                    message : \"Hello mark\"\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}\r\n","import React, {Component} from 'react'; \r\nimport {all_users} from './../../constants';\r\nimport { connect } from \"react-redux\";\r\n\r\nclass FriendTile extends Component {\r\n    render() {\r\n        const friend = all_users[this.props.id];\r\n        var friend_name = friend.name;\r\n        var friend_id = friend.id;\r\n        return <li className={friend_id == this.props.user_reducer.friend_id ? \"list-group-item btn active\" : \"list-group-item btn\"} onClick={() => this.props.tileClick(friend_id)}>{friend_name}</li>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return state;\r\n}\r\n\r\nexport default connect(mapStateToProps)(FriendTile);","import React, {Component} from 'react'; \r\nimport {all_users} from './../../constants';\r\nimport FriendTile from './friend.tile';\r\n\r\nclass AllFriendTiles extends Component {\r\n    render() {\r\n        const all_friends = all_users[\"dave\"].friends;\r\n        const tileClick = this.props.tileClick;\r\n        return <ul className=\"list-group\">\r\n            {\r\n                all_friends.map((f, i) => {\r\n                    return <FriendTile key={i} id={f} tileClick={tileClick}></FriendTile>\r\n                })\r\n            }\r\n        </ul>\r\n    }\r\n}\r\n\r\nexport default AllFriendTiles;","import React, {Component} from 'react'; \r\n\r\n\r\nclass ChatLine extends Component { \r\n    render() {\r\n        const message = this.props.message;\r\n        const friend_id = this.props.friend_id;\r\n        const base_user_id = this.props.base_user_id;\r\n        return <div className={message.id != friend_id ? \"p-1 col-10\" : \"p-1 col-12\"} ><div className={message.id != friend_id ? \"text-left\" : \"text-right\"}><span className={message.id != friend_id ? \"bg-primary rounded p-1\" : \"bg-secondary rounded p-1\"}>{message.message}</span></div></div>\r\n    }\r\n}\r\n\r\nexport default ChatLine;","import {user_constants} from './../constants';\r\n\r\nexport const user_actions = {\r\n    sendMessage,\r\n    openChat\r\n}\r\n\r\nfunction sendMessage(sender_id, receiver_id, message) {\r\n    return {\r\n        type : user_constants.SEND_MESSAGE,\r\n        payload : {sender_id, receiver_id, message}\r\n    }\r\n}\r\n\r\nfunction openChat(friend_id) {\r\n    return {\r\n        type : user_constants.OPEN_CHAT,\r\n        payload : { friend_id : friend_id}\r\n    }\r\n}","import React, {Component} from 'react'; \r\nimport { connect } from \"react-redux\";\r\nimport {user_actions} from './../../actions';\r\n\r\nclass TextBox extends Component { \r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          value: ''\r\n        };\r\n      }\r\n\r\n    render() {\r\n        const sendMessage = this.props.sendMessage;\r\n        const base_user = this.props.base_user_id;\r\n        const receiver = this.props.receiver_id;\r\n        const text = this.state.value;\r\n        const boxRef = this;\r\n\r\n        function handleChange(event) {\r\n            boxRef.setState({value: event.target.value});\r\n        }\r\n\r\n        function onClickHandler() {\r\n            var messageText  = text.trim();\r\n            if(!messageText) return;\r\n            sendMessage(base_user, receiver, messageText);\r\n            boxRef.setState({value: ''});\r\n        }\r\n        return <div className=\"input-group m-1\" style={{\"height\" : \"40px\"}}>\r\n                <textarea value={this.state.value} onChange={handleChange} className=\"form-control\"></textarea>\r\n                <button className=\"btn btn-outline-secondary\" onClick={() => onClickHandler()}>Send</button>\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return { \"base_user_id\" : state.user_reducer.base_user, \"receiver_id\" : state.user_reducer.friend_id};\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => { \r\n    return {\r\n        sendMessage:(sender_id, receiver_id, message) => {\r\n            dispatch(user_actions.sendMessage(sender_id, receiver_id, message))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TextBox);\r\n","import React, {Component} from 'react'; \r\nimport ChatLine from './chat.line';\r\nimport {all_users} from './../../constants';\r\nimport { connect } from \"react-redux\";\r\nimport TextBox from './text.box';\r\n\r\n\r\nclass Conversation extends Component { \r\n    \r\n    render() {\r\n        const friend_selected = this.props.friend_id;\r\n        const base_user = this.props.base_user;\r\n        const chat_history = this.props.chat_history;\r\n\r\n        if(!friend_selected ) {\r\n            return <div><h1>Welcome !</h1></div>\r\n        }\r\n        if(!chat_history || !chat_history[friend_selected]) {\r\n            return <div><h1>Welcome !</h1>\r\n                Start a Conversation with {all_users[friend_selected].name}\r\n                <TextBox></TextBox>\r\n            </div>\r\n        }\r\n        const prev_chat = chat_history[friend_selected].messages;\r\n        return <div style={{\"height\" : \"600px\"}} className=\"text-white\">\r\n        <div style={{\"height\" : \"450px\", \"overflowY\" : \"scroll\", \"wordWrap\": \"break-word\", \"display\" : \"block\"}} className=\"row\">{prev_chat.map((c, i) => <ChatLine key={i} message={c} base_user_id={base_user} friend_id={friend_selected}></ChatLine>)}</div>\r\n        <TextBox></TextBox>\r\n        </div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return state.user_reducer;\r\n}\r\n\r\nexport default connect(mapStateToProps)(Conversation);","import React, {Component} from 'react';\r\nimport AllFriends from './../tiles/all.friends';\r\nimport Conversation from './../conversation/conversation';\r\nimport { connect } from \"react-redux\";\r\nimport {user_actions } from './../../actions'\r\nimport {all_users} from './../../constants';\r\n\r\nclass Dashboard extends Component { \r\n\r\n    render() {\r\n        const app_config = this.props.user_reducer;\r\n        const base_user = app_config.base_user;\r\n        const friend_selected = app_config.friend_id;\r\n        const friendTileOnclick = this.props.onFriendTileClick;\r\n        const chat_history = this.props.chat_history;\r\n        const sendMessage = this.props.sendMessage;\r\n        \r\n        return <div className=\"container\">\r\n            <nav className=\"navbar navbar-light bg-light\">\r\n                <a className=\"navbar-brand\" href=\"#\">\r\n                    Cognite\r\n                </a>\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"\">{all_users[base_user].name}</a>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n            <div className=\"row d-flex m-1\">\r\n                <div className=\"col-4\"><AllFriends tileClick={friendTileOnclick}></AllFriends></div>\r\n                <div className=\"col-8\"><Conversation ></Conversation></div>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return state;\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => { \r\n    return {\r\n        onFriendTileClick:(friend_id) => {\r\n            dispatch(user_actions.openChat(friend_id))\r\n        },\r\n        sendMessage:(sender_id, receiver_id, message) => {\r\n            dispatch(user_actions.sendMessage(sender_id, receiver_id, message))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);","import React from 'react';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Dashboard from './components/dashboard/dashboard';\r\n\r\nfunction App() {\r\n  return (\r\n    <Dashboard></Dashboard>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {user_constants, chat_history} from './../constants';\r\n\r\nconst user_reducer = (state = null, action)  => { \r\n    switch(action.type) { \r\n        case user_constants.OPEN_CHAT:\r\n            return {...state, friend_id : action.payload.friend_id};\r\n        case user_constants.SEND_MESSAGE:\r\n                const receiver_id = action.payload.receiver_id;\r\n                const sender_id = action.payload.sender_id;\r\n                const messageText = action.payload.message;\r\n                const duplicate_chat_history = {...state.chat_history};\r\n                if(!receiver_id || !sender_id) {\r\n                    return state\r\n                }\r\n                let message = {id : sender_id, message : messageText};\r\n                var temp_messages_arr = [];\r\n                if(!state.chat_history[receiver_id]) {\r\n                    var start_convo = {id : receiver_id};\r\n                    start_convo.messages = [message];\r\n                    duplicate_chat_history[receiver_id] = start_convo;\r\n                } else {\r\n                    temp_messages_arr = state.chat_history[receiver_id].messages.slice(0);\r\n                    temp_messages_arr.push(message);\r\n                    duplicate_chat_history[receiver_id].messages = temp_messages_arr;\r\n                }\r\n                var temp_state = {...state, chat_history : duplicate_chat_history}\r\n                localStorage.setItem(sender_id, JSON.stringify(temp_state));\r\n            return temp_state;\r\n        default:\r\n            if(JSON.parse(localStorage.getItem('dave'))) return JSON.parse(localStorage.getItem('dave'))\r\n            let init_state = {base_user : \"dave\", chat_history : {}};\r\n            return init_state;\r\n    }\r\n}\r\n\r\nexport default user_reducer;","import { combineReducers } from 'redux';\r\nimport user_reducer from './user.reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    user_reducer\r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { createLogger } from 'redux-logger';\r\nimport rootReducer from \"../reducers/index\";\r\n\r\nconst loggerMiddleware = createLogger();\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(\r\n        thunkMiddleware,\r\n        loggerMiddleware\r\n    )\r\n);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from './store/';\r\n\r\nReactDOM.render( <Provider store={store}> <App /></Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n//serviceWorker.unregister();\r\nserviceWorker.register();\r\n"],"sourceRoot":""}